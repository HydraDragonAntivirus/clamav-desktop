name: Main

on: push

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          cache: yarn
          node-version: 17
      - name: Install
        run: yarn
      - name: Lint
        run: yarn test:lint

  type:
    name: Type
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          cache: yarn
          node-version: 17
      - name: Install
        run: yarn
      - name: Type
        run: yarn test:type

  draft:
    name: Draft
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    needs:
      - lint
      - type
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup
        uses: actions/setup-node@v2
        with:
          cache: yarn
          node-version: 17
      - name: Get Git tag
        id: tag
        run: echo "::set-output name=last-tag::$(git describe --tags --abbrev=0 || git rev-list --max-parents=0 ${{github.ref}})"
      - name: Generate release notes
        uses: ./.github/actions/release-notes
        id: release-note
        with:
          from: ${{ steps.tag.outputs.last-tag }}
          to: ${{ github.ref }}
          include-commit-body: true
          include-abbreviated-commit: true
      - name: Get version
        id: version
        run: echo "::set-output name=build-version::$(node -e "try{console.log(require('./.electron-builder.config.js').extraMetadata.version)}catch(e){console.error(e);process.exit(1)}")"
      - name: Delete outdated drafts
        uses: hugo19941994/delete-draft-releases@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
      - name: Create Release Draft
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        with:
          prerelease: true
          draft: true
          tag_name: v${{ steps.version.outputs.build-version }}
          name: v${{ steps.version.outputs.build-version }}
          body: ${{ steps.release-note.outputs.release-note }}

  release:
    name: Release
    needs:
      - draft
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
          - os: ubuntu-latest
          - os: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup
        uses: actions/setup-node@v2
        with:
          cache: yarn
          node-version: 17
      - name: Install
        run: yarn
      - name: Prepare release notes
        env:
          RELEASE_NOTE: ${{ needs.draft.outputs.release-note }}
        run: echo "$RELEASE_NOTE" >> ./build/release-notes.md
      - name: Compile
        run: yarn compile
      - name: Release
        uses: samuelmeuli/action-electron-builder@v1
        env:
          # https://www.electron.build/code-signing#how-to-disable-code-signing-during-the-build-process-on-macos
          CSC_IDENTITY_AUTO_DISCOVERY: false
          GH_TOKEN: ${{ secrets.GH_PAT }}
          VITE_APP_VERSION: ${{ needs.draft.outputs.version }}
        with:
          build_script_name: build
          github_token: ${{ secrets.GH_PAT }}
          release: true
